#!/usr/bin/env python

import zmq
import time

from tinkerforge.ip_connection import IPConnection
from tinkerforge.bricklet_temperature import Temperature

from daemon import runner

BRICK_HOST = "localhost"
BRICK_PORT = 4223
BRICK_UID = "9iw" # UID of temperature bricklet

PUB_HOST = "10.0.3.1"
PUB_PORT = 5556

class TemperatureSensor():
    def __init__(self):
        self.stdin_path = '/dev/null'
        self.stdout_path = '/dev/tty'
        self.stderr_path = '/dev/tty'
        self.pidfile_path =  '/tmp/sam-tempd.pid'
        self.pidfile_timeout = 5

    def run(self):
        brick_ipcon = IPConnection(BRICK_HOST, BRICK_PORT) # Create IP connection to brickd
        brick_temp = Temperature(BRICK_UID) # Create device object
        brick_ipcon.add_device(brick_temp) # Add device to IP connection

        pub_context = zmq.Context()
        publisher = pub_context.socket (zmq.PUB)
        pub_address = "tcp://%s:%d" % (PUB_HOST, PUB_PORT)
        publisher.bind (pub_address)

        # daemon loop
        while True:
            # Get current temperature (unit is deg C/100)
            temperature = brick_temp.get_temperature()/100.0
            message = "TEMPIN %d C" % (temperature)
            publisher.send(message)
            time.sleep(10)


app = TemperatureSensor()
daemon_runner = runner.DaemonRunner(app)
daemon_runner.do_action()
